<template>
	<view class="live-wrap position-relative">
		<live-pusher id='livePusher' ref="livePusher" class="livePusher" 
		:url="url" 
		:mode="config.mode" 
		:muted="config.muted"
		:enable-camera="true" 
		:auto-focus="true" 
		:beauty="config.beauty" 
		:whiteness="config.whiteness" 
		aspect="9:16" 
		:device-position="config.devicePosition"
		@statechange="statechange" 
		@netstatus="netstatus" 
		@error="error" 
		:style="'height:'+ windowHeight + 'px;'" 
		style="width: 750rpx;"></live-pusher>

		<view class="position-fixed" style="left: 0;right: 0;height: 580rpx;" :style="'top:'+ statusBarHeight +'px'">
			<view class="flex">
				<view class="flex align-center justify-center" style="width: 90rpx;height: 90rpx;"
				@click="goBack()">
					<!-- <text class="text-white" style="font-size: 60rpx;">×</text> -->
					<text class="text-white" style="font-size: 60rpx;">&#xe607;</text>
				</view>
				<view class="flex-1 p-2 rounded flex justify-center" 
				style="height: 150rpx; background-color: rgba(0, 0, 0, 0.2);">
					<view class="rounded bg-white mr-2 flex align-center justify-center position-relative" 
					style="width: 115rpx; height: 115rpx;">
						<image src="/static/1.jpg" mode="aspectFit" class="rounded-circle" style="width: 110rpx; height: 110rpx;"></image>
						<text class="font text-white position-absolute" style="bottom: 0;">更换封面</text>
					</view>
					<view class="flex-1 flex flex-column justify-center" style="height: 110rpx;">
						<input type="text" value="" placeholder="请输入直播标题" placeholder-style="color: #fff;" class="font-md text-white" />
						<text class="font text-white">#选择分类</text>
					</view>
				</view>
				<view class="flex flex-column" style="width: 100rpx;height: 580rpx;">
				<!-- 	<view class="live-set-item flex flex-column align-center justify-center"
					@click="switchCamera">
						<text class="iconfont text-white">&#xe605;</text>
						<text class="font text-white mt-1">翻转</text>
					</view> -->
					<view class="live-operate-item flex flex-column align-center justify-center"
					v-for="(item, i) in operationBar"
					@click="handelEvent(item)">
						<text class="iconfont text-white">{{item.icon}}</text>
						<text class="font text-white mt-1">{{item.label}}</text>
					</view>
				</view>
			</view>
		</view>

		<!-- 开始视频直播 -->
		<view class="position-fixed flex justify-center" style="bottom: 90rpx;left: 0;right: 0;">
			<view class="bg-main rounded-circle flex justify-center align-center" style="width: 560rpx;height: 120rpx;"
			@click="openRoom">
				<text class="text-white">开始视频直播</text>
			</view>
		</view>
		
		<!-- 弹出层 -->
		<uni-popup ref="livePop" type="bottom">
			<view class="flex flex-column bg-white">
				<view class="border-bottom flex align-center justify-center" style="height: 80rpx;">
					<text class="font-md">{{popTitle}}</text>
				</view>
				<!-- 画质 -->
				<template v-if="popType == 'mode'">
					<view class="mode-item flex align-center justify-center"
					v-for="(item, i) in modeList" :key="i" :class="{'bg-main': item.value == config.mode}"
					@click="config.mode = item.value">
						<text class="font" :class="{'text-white': item.value == config.mode}">{{item.label}}</text>
					</view>
				</template>
				<!-- 美颜 -->
				<view class="p-2 px-4" v-if="popType == 'beauty'">
					<slider :value="config.beauty" show-value min="0" max="9" @change="beautyChange" />
				</view>
				<!-- 美白 -->
				<view class="p-2 px-4" v-if="popType == 'whiteness'">
					<slider :value="config.whiteness" show-value min="0" max="9" @change="whitenessChange" />
				</view>
				<view class="border-block"></view>
				<view class="mode-item border-bottom flex align-center justify-center"
				@click="closePop('modePop')">
					<text class="font">取消</text>
				</view>
			</view>
		</uni-popup>
	</view>
</template>

<script>
	import uniPopup from '@/components/uni-ui/uni-popup/uni-popup.vue';
	import live from '@/common/mixins/live.js';
	export default {
		mixins: [ live ],
		components: {
			uniPopup,
		},
		data() {
			return {
				url: "",
				modeList: [
					{label: "标清", value: "SD", "selected": true},
					{label: "高清", value: "HD", "selected": false},
					{label: "超清", value: "FHD", "selected": false},
				]
			}
		},
		onReady() {
			this.context = uni.createLivePusherContext("livePusher", this);
			console.log(this.context);
			//开启摄像头预览
			this.startPreview();
		},
		computed: {
			name() {
				return this.data 
			}
		},
		methods: {
			openRoom(){
				uni.navigateTo({
					url: "../live-room/live-room?config=" + JSON.stringify(this.config)
				})
			},
			//开启摄像头预览
			startPreview() {
				this.context.startPreview({
					success: (e) => {
						console.log(e);
					}
				})
			},
		}
	}
</script>

<style>
	.live-wrap {
		flex: 1;
	}

	.live-operate-item {
		width: 100rpx;
		height: 145rpx;
	}
	.mode-item {
		height: 100rpx;
	}
	.border-block {
		height: 16rpx;
		background-color: #F5F5F3;
	}
</style>
